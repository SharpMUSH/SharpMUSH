namespace SharpMUSH.Configuration.Options;

public record LimitOptions(
	[property: SharpConfig(Name = "max_aliases", Category = "Limit", Description = "Maximum number of aliases a player can have", ValidationPattern = @"^\d+$")] uint MaxAliases,
	[property: SharpConfig(Name = "max_dbref", Category = "Limit", Description = "Maximum database reference number (highest object number)", ValidationPattern = @"^\d*$")] uint? MaxDbReference,
	[property: SharpConfig(Name = "max_attrs_per_obj", Category = "Limit", Description = "Maximum number of attributes per object", ValidationPattern = @"^\d+$")] uint MaxAttributesPerObj,
	[property: SharpConfig(Name = "max_logins", Category = "Limit", Description = "Maximum number of simultaneous logins allowed", ValidationPattern = @"^\d+$")] uint MaxLogins,
	[property: SharpConfig(Name = "max_guests", Category = "Limit", Description = "Maximum number of guest characters (-1 for unlimited)", ValidationPattern = @"^-1|\d+$")] int MaxGuests,
	[property: SharpConfig(Name = "max_named_qregs", Category = "Limit", Description = "Maximum number of named Q-registers per player", ValidationPattern = @"^\d+$")] uint MaxNamedQRegisters,
	[property: SharpConfig(Name = "connect_fail_limit", Category = "Limit", Description = "Number of failed connects before IP is temporarily banned", ValidationPattern = @"^\d+$")] uint ConnectFailLimit,
	[property: SharpConfig(Name = "idle_timeout", Category = "Limit", Description = "Seconds before connected players are considered idle", ValidationPattern = @"^\d+$")] uint IdleTimeout,
	[property: SharpConfig(Name = "unconnected_idle_timeout", Category = "Limit", Description = "Seconds before unconnected sessions are dropped", ValidationPattern = @"^\d+$")] uint UnconnectedIdleTimeout,
	[property: SharpConfig(Name = "keepalive_timeout", Category = "Limit", Description = "Seconds between TCP keepalive probes", ValidationPattern = @"^\d+$")] uint KeepaliveTimeout,
	[property: SharpConfig(Name = "whisper_loudness", Category = "Limit", Description = "Distance whispers can be heard", ValidationPattern = @"^\d+$")] uint WhisperLoudness,
	[property: SharpConfig(Name = "starting_quota", Category = "Limit", Description = "Initial quota given to new players", ValidationPattern = @"^\d+$")] uint StartingQuota,
	[property: SharpConfig(Name = "starting_money", Category = "Limit", Description = "Initial money given to new players", ValidationPattern = @"^\d+$")] uint StartingMoney,
	[property: SharpConfig(Name = "paycheck", Category = "Limit", Description = "Money given to players when they connect", ValidationPattern = @"^\d+$")] uint Paycheck,
	[property: SharpConfig(Name = "guest_paycheck", Category = "Limit", Description = "Money given to guest players when they connect", ValidationPattern = @"^\d+$")] uint GuestPaycheck,
	[property: SharpConfig(Name = "max_pennies", Category = "Limit", Description = "Maximum money a player can have", ValidationPattern = @"^\d+$")] uint MaxPennies,
	[property: SharpConfig(Name = "max_guest_pennies", Category = "Limit", Description = "Maximum money a guest can have", ValidationPattern = @"^\d+$")] uint MaxGuestPennies,
	[property: SharpConfig(Name = "max_parents", Category = "Limit", Description = "Maximum inheritance chain depth for objects", ValidationPattern = @"^\d+$")] uint MaxParents,
	[property: SharpConfig(Name = "mail_limit", Category = "Limit", Description = "Maximum number of mail messages per player", ValidationPattern = @"^\d+$")] uint MailLimit,
	[property: SharpConfig(Name = "max_depth", Category = "Limit", Description = "Maximum nesting depth for function calls", ValidationPattern = @"^\d+$")] uint MaxDepth,
	[property: SharpConfig(Name = "player_queue_limit", Category = "Limit", Description = "Maximum commands a player can queue", ValidationPattern = @"^\d+$")] uint PlayerQueueLimit,
	[property: SharpConfig(Name = "queue_loss", Category = "Limit", Description = "Percentage chance commands are lost under heavy load", ValidationPattern = @"^\d+$")] uint QueueLoss,
	[property: SharpConfig(Name = "queue_chunk", Category = "Limit", Description = "Number of queued commands processed at once", ValidationPattern = @"^\d+$")] uint QueueChunk,
	[property: SharpConfig(Name = "function_recursion_limit", Category = "Limit", Description = "Maximum recursion depth for functions", ValidationPattern = @"^\d+$")] uint FunctionRecursionLimit,
	[property: SharpConfig(Name = "function_invocation_limit", Category = "Limit", Description = "Maximum number of function calls per command", ValidationPattern = @"^\d+$")] uint FunctionInvocationLimit,
	[property: SharpConfig(Name = "call_limit", Category = "Limit", Description = "Maximum nested function calls per evaluation", ValidationPattern = @"^\d+$")] uint CallLimit,
	[property: SharpConfig(Name = "player_name_len", Category = "Limit", Description = "Maximum length of player names", ValidationPattern = @"^\d+$")] uint PlayerNameLen,
	[property: SharpConfig(Name = "queue_entry_cpu_time", Category = "Limit", Description = "CPU time limit per queued command (seconds)", ValidationPattern = @"^\d+$")] uint QueueEntryCpuTime,
	[property: SharpConfig(Name = "use_quota", Category = "Limit", Description = "Enable quota system for object creation")] bool UseQuota,
	[property: SharpConfig(Name = "chunk_migrate", Category = "Limit", Description = "Number of objects to migrate per database optimization cycle", ValidationPattern = @"^\d+$")] uint ChunkMigrate
);